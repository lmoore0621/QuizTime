@model QuizLibrary.Question

@{
    ViewBag.Title = "Edit";
}

<body id="bodyBg">

    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <form>
            <div class="form-horizontal form-all">

                <div class="col-md-6 form-section">
                    <h4>Edit Question</h4>
                    <hr />

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.QuestionId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionType, "Question Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QuestionType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QuestionType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </form>

        <div class="col-md-6">
            <h4>Edit Answers</h4>
            <hr />

            <button type="button" id="add-answer-button" class="btn btn-success">Add Answer</button>
            <div id="answers-box">
                @for (int i = 0; i < Model.Answers.Count; i++)
                {
                    <input type="hidden" name="Answers[@i].AnswerId" id="Answers[@i].AnswerId" value="@Model.Answers.ElementAt(i).AnswerId" />
                    <input type="hidden" name="Answers[@i].QuestionId" id="Answers[@i].AnswerId" value="@Model.Answers.ElementAt(i).QuestionId" />
                    <div>
                        <label for="Answers[@i].Content" class="control-label">Content:</label>
                        <textarea id="Answers[@i].Content" name="Answers[@i].Content" class="form-control">@Model.Answers.ElementAt(i).Content</textarea>
                    </div>
                    <div>
                        <label for="Answers[@i].IsCorrect" class="control-label">Is Correct:</label>
                        @*@Html.CheckBoxFor(a => @Model.Answers.ElementAt(i).IsCorrect, new { name = "Answers[" + i + "].IsCorrect", id = "Answers[" + i + "].IsCorrect" })*@
                        @Html.CheckBox("Answers[" + i + "].IsCorrect", Model.Answers.ElementAt(i).IsCorrect)
                    </div>
                }
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/Scripts/ManagerScript.Js")
    }
    </body>